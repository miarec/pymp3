name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  test:
    name: Build and Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.8]

    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all tags (required for the version build)
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements-dev.txt

      - name: Install the package
        run: |
          pip install -e .

      - name: Run tests
        run: |
          mkdir test-reports
          pytest --durations=50 --junitxml=pytest.xml tests

      - name: Upload Unit Test Results (Python {{ matrix.python-version}})
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (Python ${{ matrix.python-version }})
          path: pytest.xml

      
  publish-test-results:
    name: Publish Unit Tests Results
    needs: test
    runs-on: ubuntu-20.04
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml

  make_sdist:
    name: Make SDist
    needs: test
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        # Fetch all tags (required for the version build)
        fetch-depth: 0

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-20.04, windows-2019, macos-11]
        os: [ubuntu-20.04, windows-2019]

    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all tags (required for the version build)
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        env:
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/tests"
        with:
          package-dir: .
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish_pypi:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
